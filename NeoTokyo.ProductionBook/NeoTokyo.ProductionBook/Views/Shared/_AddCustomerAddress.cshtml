@model NeoTokyo.ProductionBook.ViewModel.CustomerAddressViewModel

<div style="padding: 10px">

    <h4>Add Address</h4>

    @using (Html.BeginForm("_AddCustomerAddress", "Customer"))
    {
        <div class="form-horizontal">

            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Address.AddressName, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.AddressName, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Address.AddressName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.AddressLine1, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.AddressLine1, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Address.AddressLine1, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.AddressLine2, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.AddressLine2, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Address.AddressLine2, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.Town, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Town, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Address.Town, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.County, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.County, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Address.County, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Country", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Address.CountryID", (IEnumerable<SelectListItem>)ViewBag.Countries, "No Country Selected", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.PostCode, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.PostCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Set as Default Delivery Address", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AsDefaultDelivery)
                        @Html.ValidationMessageFor(model => model.AsDefaultDelivery, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Set as Default Invoice Address", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AsDefaultInvoice)
                        @Html.ValidationMessageFor(model => model.AsDefaultInvoice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>

        </div>

    }

    <div>
        @Html.ActionLink("Back to Details", "Details", "Customer", new {id = Model.ID}, null)
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}